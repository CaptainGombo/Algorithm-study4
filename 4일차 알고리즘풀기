class Solution {
    public int solution(int[] array, int n) {
        int answer = 0;

        for (int i = 0; i < array.length; i++) {
            if (array[i] == n) {
                answer++;
            }
        }
        return answer;
    }
}

class Solution {
    public double solution(int[] numbers) {
    double answer = 0;
        for(int i = 0; i < numbers.length; i++) {
        answer += numbers[i];
    }
        return answer/numbers.length;
    }
}

// 풀이 방법
// for 문 numbers 길이만큼 >> number[i] >> for 문 밖에서 answer = sum/개수

class Solution {
    public int[] solution(int[] num_list) {
        int[] answer = new int[2];
        int x = 0;
        int y = 0;
        
        for(int i=0; i<num_list.length; i++){
                     
         if(num_list[i] % 2 ==0){
             x++;
             
         } else{
             y++;
         }     
        
        }
        answer[0] = x;
        answer[1] = y;
       
        return answer;
    }
}

import java.util.Arrays;

class Solution {
public int[] solution(int[] numbers, int num1, int num2) {
return Arrays.copyOfRange(numbers, num1, num2 + 1);
}
}
// Arrays.copyOfRange(배열, 시작 인덱스, 마지막 인덱스 전까지

//copyOFRange는 원본 배열에서 어디서부터 어디까지 잘라서 배열로 리턴하는 함수.


class Solution {
    public int[] solution(String[] strlist) {
        int[] answer = new int[strlist.length];

        for (int i = 0; i < answer.length; i++) {
            answer[i] = strlist[i].length();
        }
        return answer;
    }
}

class Solution {
    public int[] solution(int[] num_list) {
        int[] answer = new int [num_list.length];
        
        for(int i = 0; i < num_list.length; i++){
            
            answer[i] = num_list[num_list.length-i-1];
        }
        
        return answer;
    }
}


// 순서는 어떻게 되나요
// 일단
// answer int[num_list.length] 선언
// for 문 : num_list 길이만큼 반복,
// for 문의 내용 : 배열의 길이만큼 - i 역순

import java.util.Arrays;

class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        
        Arrays.sort(numbers);
         
        answer= numbers[numbers.length -1]*numbers[numbers.length-2];
        return answer;
    }
}


//일단 정렬부터합시다 Array.sort()
//다음에 배열의 맨뒤에 두개를 곱한값을 바로 리턴해도 되것쥬? 


